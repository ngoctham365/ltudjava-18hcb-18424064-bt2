/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ltudjava.hcb.bt2.gui;

import java.awt.HeadlessException;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import ltudjava.hcb.bt2.bus.*;
import ltudjava.hcb.bt2.dto.Subject;

/**
 *
 * @author Jossion
 */
public class ScoreMngFrame extends javax.swing.JFrame {

    static boolean showed = false;
    private String gradeName;
    private String subjectName;
    private String studentCode;

    /**
     * Creates new form ScoreMngFrame
     */
    public ScoreMngFrame() {
        initComponents();

        cbbGrade.removeAllItems();
        cbbSubject.removeAllItems();

        List<Subject> listSubject = SubjectBUS.getAll();
        DefaultListModel listGrade = GradeBUS.getListName();

        listSubject.stream().forEach((listSubject1) -> {
            cbbSubject.addItem(listSubject1.getName());
        });
        for (int i = 0; i < listGrade.size(); i++) {
            cbbGrade.addItem(listGrade.getElementAt(i).toString());
        }

    }

    ScoreMngFrame(String studentCodeInput) {
        initComponents();

        this.studentCode = studentCodeInput;

        btnImport.setEnabled(false);
        btnInputScore.setEnabled(false);

        initialTable(1);
        this.table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cbbGrade = new javax.swing.JComboBox();
        cbbSubject = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        btnInputScore = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ ĐIỂM");
        jLabel1.setToolTipText("");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        table.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tablePropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Chọn lớp:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Chọn môn:");

        btnInputScore.setText("NHẬP ĐIỂM");
        btnInputScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputScoreActionPerformed(evt);
            }
        });

        btnImport.setText("IMPORT .CSV");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbbGrade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbbSubject, 0, 131, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnInputScore, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbbGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbbSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnInputScore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnImport)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        Integer countAdded = ScoreBUS.saveInfoListScoreFromFileCSV(this);
        if (countAdded != -1) {
            JOptionPane.showMessageDialog(this, "Đã cập nhật điểm cho " + countAdded + " sinh viên.");

            initialTable(2);
        }
    }//GEN-LAST:event_btnImportActionPerformed

    private void btnInputScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputScoreActionPerformed
        this.gradeName = cbbGrade.getSelectedItem().toString().trim();
        this.subjectName = cbbSubject.getSelectedItem().toString().trim();
        initialTable(2);
    }//GEN-LAST:event_btnInputScoreActionPerformed

    Integer temp = -1;
    String value_old = "";
    private void tablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tablePropertyChange
        if (table.getRowCount() == 0) {
            return;
        }
        String value = "";
        if (table.getSelectedRow() != -1 || table.getSelectedColumn() != -1) {
            value = table.getValueAt(table.getSelectedRow(), table.getSelectedColumn()).toString();
        }
        if (this.temp == table.getSelectedRow() && -1 != table.getSelectedRow()) {
            System.out.println(table.getSelectedRow() + "____" + table.getSelectedColumn() + "____" + value);
            try {
                if (!value.isEmpty() && !(Double.parseDouble(value) >= 0 && Double.parseDouble(value) <= 10D)) {
                    JOptionPane.showMessageDialog(this, "Điểm không hợp lệ. Điểm phải từ 0 đến 10.", value, WIDTH);
                    table.setValueAt(value_old, table.getSelectedRow(), table.getSelectedColumn());
                    return;
                }
            } catch (NumberFormatException | HeadlessException e) {
                table.setValueAt(value_old, table.getSelectedRow(), table.getSelectedColumn());
            }
            String studentCode = table.getModel().getValueAt(temp, 0).toString();

            Float scoreHaft = null, scoreFull = null, scoreAnother = null, scoreSummary = null;
            try {
                scoreHaft = Float.valueOf(table.getModel().getValueAt(temp, 2).toString());
            } catch (NumberFormatException e) {
            }
            try {
                scoreFull = Float.valueOf(table.getModel().getValueAt(temp, 3).toString());
            } catch (NumberFormatException e) {
            }
            try {
                scoreAnother = Float.valueOf(table.getModel().getValueAt(temp, 4).toString());
            } catch (NumberFormatException e) {
            }
            try {
                scoreSummary = Float.valueOf(table.getModel().getValueAt(temp, 5).toString());
            } catch (NumberFormatException e) {
            }
            if (!ScoreBUS.update(studentCode, gradeName, subjectName, scoreHaft, scoreFull, scoreAnother, scoreSummary)) {
                JOptionPane.showMessageDialog(this, "Cập nhật điểm thất bại.");
            }
        }
        temp = table.getSelectedRow();

        value_old = value;
    }//GEN-LAST:event_tablePropertyChange

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        showed = false;
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScoreMngFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScoreMngFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScoreMngFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScoreMngFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScoreMngFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnInputScore;
    private javax.swing.JComboBox cbbGrade;
    private javax.swing.JComboBox cbbSubject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private void initialTable(int i) {
        if (i == 1) {
            table.setModel(ScoreBUS.getScoreTable(this.studentCode));
        } else {
            table.setModel(ScoreBUS.getScoreTable(this.gradeName, this.subjectName));
        }
        this.table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        table.getColumnModel().getColumn(1).setPreferredWidth(125);
    }
}
